buildscript {

    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        mavenCentral()
    }

    dependencies {
        classpath("com.anatawa12.forge:ForgeGradle:2.3-1.0.+") {
            changing = true
        }
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'org.spongepowered.mixin'


sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "v${mod_version}-${forge_version.replaceAll("-.*", "")}"
group = "${mod_group}"
ext.version = "${mod_version}"
ext.id = "${mod_id}"
ext.name = "${mod_name}"
ext.author = "${mod_author}"
ext.description = "${mod_description}"
ext.url = "${mod_url}"
ext.loader = "${loader_version.replaceAll("\\..*", "")}"
ext.forge = "${loader_version}"
ext.mc = "${mc_version}"

minecraft {
    version = "${forge_version}"
    runDir = "run"
    useDepAts = true
    mappings = "snapshot_20171003"
}

repositories {
    mavenLocal()
    maven { url = "https://repo.spongepowered.org/repository/maven-public" }
}

dependencies {
    compile ("org.spongepowered:mixin:0.8.2") {

        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "log4j-core"
        exclude module: "gson"
        exclude module: "commons-io"
    }
    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
}

sourceSets {
    main {
        ext.refMap = "mixins.${project.ext.id}.refmap.json"
    }
}

processResources {

    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_id", project.ext.id
    inputs.property "mod_name", project.ext.name
    inputs.property "mod_name2", project.ext.name.replaceAll("\\s", "")
    inputs.property "mod_version", project.ext.version
    inputs.property "mod_group", project.group
    inputs.property "mod_url", project.ext.url
    inputs.property "mod_description", project.ext.description
    inputs.property "mod_author", project.ext.author
    inputs.property "loader_version", project.ext.loader
    inputs.property "forge_version", project.ext.forge
    inputs.property "mc_version", project.ext.mc

    setDuplicatesStrategy(DuplicatesStrategy.WARN)
    // replace stuff in mods.toml and pack.mcmeta
    from(sourceSets.main.resources.srcDirs) {

        include 'mcmod.info', 'pack.mcmeta'

        expand (

                'mod_id': project.ext.id,
                'mod_name': project.ext.name,
                'mod_name2': project.ext.name.replaceAll("\\s", ""),
                'mod_version': project.ext.version,
                'mod_group': project.group,
                'mod_url': project.ext.url,
                'mod_description': project.ext.description,
                'mod_author': project.ext.author,
                'loader_version': project.ext.loader,
                'forge_version': project.ext.forge,
                'mc_version': project.ext.mc
        )
    }

    // copy everything else except mods.toml and pack.mcmeta
    from(sourceSets.main.resources.srcDirs) {

        exclude 'mcmod.info', 'pack.mcmeta'
    }
}

jar {
    manifest {
        attributes "FMLCorePlugin": project.group + ".core." + project.ext.name.replaceAll("\\s", "") + "Core"
        attributes "FMLCorePluginContainsFMLMod": "true"
        attributes "ForceLoadAsMod": "true"
        attributes "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        attributes "TweakOrder": "0"
    }
}

jar.finalizedBy('reobfJar')

publishing {

    publications {

        mavenJava (MavenPublication) {

//            artifact sourceJar
//            artifact javadocJar
            from components.java
        }
    }
}

idea { module { inheritOutputDirs = true } }
